// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  firstName     String    @map("first_name")
  lastName      String    @map("last_name")
  email         String    @unique
  password      String
  picturePath   String?   @default("") @map("picture_path")
  friends       Friend[]
  location      String?   @default("")
  occupation    String?   @default("")
  viewedProfile Int?      @default(0)
  impressions   Int?      @default(0)
  updatedAt     DateTime? @updatedAt
  createdAt     DateTime? @default(now()) @map("created_at")
  posts         Post[]
  likes         Like[]
  comments      Comment[]

  @@map("users")
}

model Friend {
  id          String  @id @default(uuid())
  firstName   String  @map("first_name")
  lastName    String  @map("last_name")
  occupation  String? @default("")
  location    String? @default("")
  picturePath String? @default("") @map("picture_path")
  userId      String  @map("user_id")
  user        User    @relation(fields: [userId], references: [id])

  @@map("friends")
}

model Post {
  id          String    @id @default(uuid())
  description String
  picturePath String?   @map("picture_path")
  userId      String    @map("user_id")
  user        User      @relation(fields: [userId], references: [id])
  likes       Like[]
  comments    Comment[]
  updatedAt   DateTime? @updatedAt
  createdAt   DateTime? @default(now()) @map("created_at")

  @@map("posts")
}

model Like {
  id     String @id @default(uuid())
  postId String @map("post_id")
  posts  Post[]
  userId String @map("user_id")
  users  User[]

  @@map("likes")
}

model Comment {
  id          String    @id @default(uuid())
  postId      String    @map("post_id")
  posts       Post[]
  userId      String    @map("user_id")
  users       User[]
  description String
  updatedAt   DateTime? @updatedAt
  createdAt   DateTime? @default(now()) @map("created_at")

  @@map("comments")
}
